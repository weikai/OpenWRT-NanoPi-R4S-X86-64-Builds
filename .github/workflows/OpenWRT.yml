#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT

name: Build OpenWRT

on:
  watch:
    types: started
  workflow_dispatch:
  
jobs:
    build:
      runs-on: ubuntu-18.04
      if: github.event.repository.owner.id == github.event.sender.id

      steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Show CPU Model and Free Space
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          free -h
      - name: Set env
        run: |
          echo "SSH_ACTIONS=false" >> $GITHUB_ENV
          echo "UPLOAD_BIN_DIR=false" >> $GITHUB_ENV
          echo "UPLOAD_FIRMWARE=true" >> $GITHUB_ENV
          echo "UPLOAD_RELEASE=true" >> $GITHUB_ENV
          echo "TZ=America/New_York" >>$GITHUB_ENV
          echo "Build_Date=$(date +%Y.%m.%d)" >> $GITHUB_ENV
          echo "RELTAG=v$(date +'%Y%m%d.%H%M%S')" >> $GITHUB_ENV
          
      - name: Show env
        run: echo $GITHUB_ENV

      - name: free disk space
        run: |
          df -h
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)          
          df -h
          /bin/bash ./.github/workflows/workflow-scripts/free_disk_space.sh
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E rm -rf /etc/apt/sources.list.d
          sudo -E apt-get update -y
          sudo -E apt-get install -y build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python3 python3-pip python3-ply haveged lrzsz device-tree-compiler scons          
          sudo -E apt-get clean -y
          git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
          df -h
          
      - name: Checkout Code
        run: /bin/bash steps/01_checkout_code.sh
          
      - name: Update Feed
        run: /bin/bash steps/02_update_feed.sh          
             
      - name: Apply patch
        run: /bin/bash steps/03_apply_patch.sh
        
      - name: Setup custom config
        run: /bin/bash steps/04_setup_config.sh      
       
      - name: Apply post config patch
        run: /bin/bash steps/05_apply_post_config_patch.sh
        
      - name: Build OpenWRT
        run: /bin/bash steps/06_build_openwrt.sh

      - name: Clean Previous Build Tmp files        
        run: |          
          pwd
          ls 
          find build/openwrt/build_dir -maxdepth 1 -type d -name '*-aarch64_generic_*' -exec rm -rf '{}' \;
          
      - name: Convert R4S config to x86
        run: /bin/bash steps/04_setup_config_x86.sh

      - name: Build OpenWRT for x86_64
        run: /bin/bash steps/06_build_openwrt.sh
      
      - name: Set env
        run: |
          echo "TZ=america/new_york" >>$GITHUB_ENV
          echo "Build_Date=$(date +%Y-%m-%d %H:%M)" >> $GITHUB_ENV
          echo "RELTAG=$(date +'%Y%m%d.%H%M')" >> $GITHUB_ENV
          echo "RELDATE=$(date +'%Y.%m.%d')" >> $GITHUB_ENV
      
      - name: Organize files
        id: organizefiles
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find build/openwrt/bin/targets -type f \( -name '*.img.gz' -o -name 'config.buildinfo' \) -exec mv '{}' ./artifact/ \;
          ls -al ./artifact/                          
      
      - name: Upload artifact
        uses: actions/upload-artifact@main
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        with:
          name: OpenWRT
          path: ./artifact/

      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1.8.4
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          name: OpenWrt ${{ env.RELDATE }} 
          allowUpdates: true
          tag: openwrt-${{ env.RELDATE }}
          commit: main
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          bodyFile: "release-info.md"
          artifacts: ./artifact/*.*
